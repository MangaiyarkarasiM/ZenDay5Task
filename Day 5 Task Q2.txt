Problem:
Write a function called “addFive”.
Given a number, “addFive” returns 5 added to that number.

Program:
function addFive(num) { 
 return num+5;
}

console.log(addFive(5));
console.log(addFive(0));
console.log(addFive(-5));

Output:
10
5
0

Problem:
Write a function called “getOpposite”.
Given a number, return its opposite.

Program:
function getOpposite(num) {
    if(num%1===0)
    {
        if(num===0)
        {
            return 0;
        }
        else
        {
            return num*-1;
        }
    }
    else
    {
        return -1;
    }
}

console.log(getOpposite(5));
console.log(getOpposite(0));
console.log(getOpposite(-5));
console.log(getOpposite('5a'));
console.log(getOpposite(5.5));

Output:
-5
0
5
-1
-1

Problem:
Fill in your code that takes an number minutes and converts it to seconds.

Program:
function toSeconds(min) {
    return min*60;
}

console.log(toSeconds(5));
console.log(toSeconds(3));
console.log(toSeconds(2));

Output:
300
180
120

Problem:
Create a function that takes a string and returns it as an integer.

Program:
function toInteger(mystr) {
    return parseInt(mystr);
}

console.log(toInteger('6'));
console.log(toInteger('1000'));
console.log(toInteger('12'));

Output:
6
1000
12

Problem:
Create a function that takes a number as an argument, increments the number by +1 and returns the result.

Program:
function nextNumber(myint) {
    return myint+1;
}

console.log(nextNumber(0));
console.log(nextNumber(9));
console.log(nextNumber(-3));

Output:
1
10
-2

Problem:
Create a function that takes an array and returns the first element.

Program:
function getFirstElement(arr) {
    return arr[0];
}

console.log(getFirstElement([1, 2, 3]));
console.log(getFirstElement([80, 5, 100]));
console.log(getFirstElement([-500, 0, 50]));

Output:
1
80
-500

Problem:
Convert Hours into Seconds
Write a function that converts hours into seconds.

Program:
function hourToSeconds(hr) {
    return hr*3600;
}

console.log(hourToSeconds(2));
console.log(hourToSeconds(10));
console.log(hourToSeconds(24));

Output:
7200
36000
86400

Problem:
Find the Perimeter of a Rectangle
Create a function that takes height and width and finds the perimeter of a rectangle.

Program:
function findPerimeter(num1,num2) {
    return 2*(num1+num2);
}

console.log(findPerimeter(6,7));
console.log(findPerimeter(20,10));
console.log(findPerimeter(2,9));

Problem:
Less Than 100?
Given two numbers, return true if the sum of both numbers is less than 100. Otherwise return false.

Program:
function lessThan100(num1,num2) {
    return (num1+num2<100)
}

console.log(lessThan100(22,15));
console.log(lessThan100(83,34));

Output:
true
false

Problem:
There is a single operator in JavaScript, capable of providing the remainder of a division operation. Two numbers are passed as parameters. The first parameter divided by the second parameter will have a remainder, possibly zero. Return that value.

Program:
function remainder(num1,num2) {
    return num1%num2;
}

console.log(remainder(1,3));
console.log(remainder(3, 4));
console.log(remainder(-9,45));
console.log(remainder(5,5));

Output:
1
3
-9
0

Problem:
Old macdonald had a farm:
MacDonald is asking you to tell him how many legs can be counted among all his animals. The farmer breeds three species:
turkey = 2 legs
horse = 4 legs
pigs = 4 legs
The farmer has counted his animals and he gives you a subtotal for each species. You have to implement a function that returns the total number of legs of all the animals.

Program;
function CountAnimals(tur,horse,pigs) {
    return tur*2+horse*4+pigs*4;
}

console.log(CountAnimals(2,3,5));
console.log(CountAnimals(1,2,3));
console.log(CountAnimals(5,2,8));

Output:
36
22
50

Problem:
Frames Per Second
Create a function that returns the number of frames shown in a given number of minutes for a certain FPS.

Program:
function frames(num1,num2) {
    return num1*num2*60;
}

console.log(frames(1,1));
console.log(frames(10,1));
console.log(frames(10,25));

Output:
60
600
15000

Problem:
Check if an Integer is Divisible By Five
Create a function that returns true if an integer is evenly divisible by 5, and false otherwise.

Program:
function divisibleByFive(num1) {
    return num1%5===0;
}

console.log(divisibleByFive(5));
console.log(divisibleByFive(-55));
console.log(divisibleByFive(37));

Output:
true
true
false

Problem:
Write a function called “isEven”.
Given a number, “isEven” returns whether it is even.

Program:
function isEven(num){
 if(typeof(num)==='number')
 {
     return num%2===0;
 }
 else
 {
     return -1;
 }
}

console.log(isEven(12));
console.log(isEven(0));
console.log(isEven(11));
console.log(isEven('11h'));

Output:
true
true
false
-1

Problem:
Write a function called “areBothOdd”.
Given 2 numbers, “areBothOdd” returns whether or not both of the given numbers are odd.

Program:
function areBothOdd(num1, num2){
 return num1%2===1 && num2%2===1;
}

console.log(areBothOdd(1,3));
console.log(areBothOdd(1,4));
console.log(areBothOdd(2,3));
console.log(areBothOdd(0,0));

Output:
true
false
false
false

Problem:
Write a function called “getFullName”.
Given a first and a last name, “getFullName” returns a single string with the given first and last names separated by a single space.

Program:
function getFullName(firstName, lastName){

 if(firstName==null)
 {
     return lastName;
 }
 else if(lastName==null)
 {
     return firstName;
 }
 else  if(firstName!=null&&lastName!=null)
 {
     return firstName+" "+lastName;
 }
 else
 {
     return '';
 }
}

console.log(getFullName('GUVI','GEEK'));
console.log(getFullName('GUVI'));
console.log(getFullName('GEEK'));
console.log(getFullName('', ''));

Output:
GUVI GEEK
GUVI
GEEK

Problem:
Write a function called “getLengthOfWord”.
Given a word, “getLengthOfWord” returns the length of the given word.

Program:
function getLengthOfWord(word){
 if(typeof(word)==='string')
 {
     return word.length;
 }
 else
 {
     return -1;
 }
}

console.log(getLengthOfWord('GUVI'));
console.log(getLengthOfWord(''));
console.log(getLengthOfWord());
console.log(getLengthOfWord(9));

Output:
4
0
-1
-1

Problem:
Write a function called “isSameLength”.
Given two words, “isSameLength” returns whether the given words have the same length.

Program:

function isSameLength(word1, word2){
 return word1.length===word2.length;
}
console.log(isSameLength('GUVI','GEEK'));
console.log(isSameLength('GEEK','ab'));

Output:
true
false

Problem:
Create a function to calculate the distance between two points defined by their x, y coordinates.

Program:
function getDistance(x1, y1, x2, y2)
{
  return Math.sqrt(Math.pow((x2-x1),2)+Math.pow((y2-y1),2)).toFixed(2);
}

console.log(getDistance(100, 100, 400, 300));

Output:
360.56

Problem:
Write a function called “getNthElement”.
Given an array and an integer, “getNthElement” returns the element at the given integer, within the given array. If the array has a length of 0, it should return ‘undefined’.

Program:
function getNthElement(array,n){
    return array[n];
}

console.log(getNthElement([1, 3, 5], 1));

Output:
3

Problem:
Write a function called “getLastElement”.
Given an array, “getLastElement” returns the last element of the given array. If the given array has a length of 0, it should return ‘-1’.

Program:
function getLastElement(array){
   return array[array.length-1];
}

console.log(getLastElement([1, 2, 3, 4]));

Output:
4

Problem:
Write a function called “getProperty”.
Given an object and a key, “getProperty” returns the value of the property at the given key. If there is no property at the given key, it should return undefined.

var obj = {
mykey: “value”
};

Program:
var obj = {
 mykey: 'value'
};
function getProperty(obj, key) {
  if(obj[key]!==undefined)
  {
      return obj[key];
  }
  else
  {
      return 'NA';
  }
}

console.log(getProperty(obj,'mykey'));
console.log(getProperty(obj,'key'));

Output:
value
NA

Problem:
Write a function called “addProperty”.
Given an object and a key, “addProperty” adds a new property on the given object with a value of true.

Program:
var obj = {};

function addProperty(obj, key) {
    obj[key]='value';
    return obj;
}

console.log(addProperty(obj,'mykey'));

Output:
{ mykey: 'value' }

Problem:
Write a function called “removeProperty”.
Given an object and a key, “removeProperty” removes the given key from the given object.

Program:
var obj = {
    name : 'ABC'
};

function removeProperty(obj, key) {
    delete obj.key;
    return obj.key;
}

console.log(removeProperty(obj, 'name'));

Output:
undefined

Problem:
Return an array, where the first element is the count of positives numbers and the second element is sum of negative numbers.

Program:
var arr = [-5, 10, -3, 12, -9, 5, 90, 0, 1];
var ar2 = function(arr) {
    var posnum=0,sum=0;
    for(let i=0;i<arr.length;i++)
    {
        if(arr[i]>0)
        {
            posnum++;
        }
        else
        {
            sum+=arr[i];
        }
    }
    arr.unshift(sum);
    arr.unshift(posnum);
    return arr;
};

console.log(ar2(arr));

Output:
[ 5, -17, -5, 10, -3, 12, -9, 5, 90, 0, 1 ]

Problem:
Create a function that receives an array of numbers and returns an array containing only the positive numbers

Program:
var ar = [-5, 10, -3, 12, -9, 5, 90, 0, 1];
var ar2 = getPositives(ar);

console.log(ar2);

function getPositives(ar)
{
    var re=[];
    for(let i=0;i<ar.length;i++)
    {
        if(ar[i]>0)
        {
            re.push(ar[i]);
        }
    }
    return re;
}

Output:
[ 10, 12, 5, 90, 1 ]

Problem:
Write a function `powersOfTwo` which will return list of all powers of 2 from 0 to n (where n is an exponent).

Program:
function powersOfTwo(n){
    var res='';
    for(i=0;i<=n;i++)
    {
        let p=Math.pow(2,i);
        if(i!==n)
        {
            res+=p+',';
        }
        else
        {
            res+=p;
        }
    }
    return res;
}

console.log(powersOfTwo(0));
console.log(powersOfTwo(1));
console.log(powersOfTwo(2));

Output:
1
1,2
1,2,4

Problem:
Find the maximum number in an array of numbers

Program:
var ar = [-5, 10, -3, 12, -9, 5, 90, 0, 1];
var max = findMax(ar);
console.log('Max: ', max);

function findMax(ar)
{
    var ma=-Infinity;
    for(let i=0;i<ar.length;i++)
    {
        if(ar[i]>ma)
        {
            ma=ar[i];
        }
    }
    return ma;
}

Output:
Max:  90

Problem:
Print the first 100 prime numbers.

Program:
printPrimes(100);

function printPrimes(nPrimes)
{
 var n = 1;
 var i = 2;
 
 while(n <= nPrimes)
 {
 if (isPrime(i))
 {
 console.log(n+"->"+i);
 n++;
 }
 
 i++;
 }
}

function isPrime(n)
{
   let prime=true;
   if(n===2)
   {
       return true;
   }
   for(let i=2;i<n/2;i++)
   {
       if(n%i===0)
       {
           prime=false;
       }
   }
   return prime;
}

Output:
1->2
2->3
3->4
4->5
5->7
6->11
7->13
8->17
9->19
10->23
11->29
12->31
13->37
14->41
15->43
16->47
17->53
18->59
19->61
20->67
21->71
22->73
23->79
24->83
25->89
26->97
27->101
28->103
29->107
30->109
31->113
32->127
33->131
34->137
35->139
36->149
37->151
38->157
39->163
40->167
41->173
42->179
43->181
44->191
45->193
46->197
47->199
48->211
49->223
50->227
51->229
52->233
53->239
54->241
55->251
56->257
57->263
58->269
59->271
60->277
61->281
62->283
63->293
64->307
65->311
66->313
67->317
68->331
69->337
70->347
71->349
72->353
73->359
74->367
75->373
76->379
77->383
78->389
79->397
80->401
81->409
82->419
83->421
84->431
85->433
86->439
87->443
88->449
89->457
90->461
91->463
92->467
93->479
94->487
95->491
96->499
97->503
98->509
99->521
100->523

Problem:
Create a function that will return in an array the first “nPrimes” prime numbers greater than a particular number “startAt”

Program:
console.log(getPrimes(10, 100));

function getPrimes(nPrimes,startAt)
{
 var n = 1;
 var i = 100;
 var res=[];
 while(n <= nPrimes)
 {
    if (isPrime(i))
    {
        res.push(i);
        n++;
    }
    i++;
 }
 return res;
}

function isPrime(n)
{
   let prime=true;
   if(n===2)
   {
       return true;
   }
   for(let i=2;i<n/2;i++)
   {
       if(n%i===0)
       {
           prime=false;
       }
   }
   return prime;
}

Output:
[ 101, 103, 107, 109, 113, 127, 131, 137, 139, 149 ]

Problem:
Reverse a string

Program:
var s = reverseString("JavaScript");
console.log(s);
function reverseString(s)
{
   return s.split('').reverse().join('');
}

Output:
tpircSavaJ

Problem:
Create a function that will merge two arrays and return the result as a new array.

Program:
var ar1 = [1, 2, 3];
var ar2 = [4, 5, 6];
var ar = mergeArrays(ar1, ar2);
console.log(ar);
function mergeArrays(ar1, ar2)
{
 var result = [];
for(let el of ar1)
 {
 result.push(el);
 }
 
for(let el of ar2)
 {
 result.push(el);
 }
 
 return result;
}

Output:
[ 1, 2, 3, 4, 5, 6 ]

Problem:
Calculate the sum of numbers received in a comma delimited string.

Program:
console.log(sumCSV('1.5, 2.3, 3.1, 4, 5.5, 6, 7, 8, 9, 10.9'));
function sumCSV(s)
{
  var a=s.split(",").map(Number);
  var sum=0;
  for(let i=0;i<a.length;i++)
  {
      sum+=a[i];
  }
  return sum;
}

Output:
57.3
